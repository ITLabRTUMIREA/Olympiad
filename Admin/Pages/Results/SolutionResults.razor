@page "/challenges/{ChallengeId:guid}/results/{UserStudentId}/{SolutionId:guid}"

@using Microsoft.EntityFrameworkCore
@using BlazorStrap
@inject ApplicationDbContext dbContext

<h3><NavLink href=@($"challenges/{ChallengeId}/results/{UserStudentId}")>Back to user results</NavLink></h3>
<h3>SolutionResults</h3>

<h4>Challenge: @(challenge?.Name ?? "Loading...")</h4>
<h4>User student id: @(user?.StudentID ?? "Loading...")</h4>
<h4>Exercise: @(solution?.Exercise?.ExerciseName ?? "Loading...")</h4>
<h4>Sended: @solution?.SendingTime</h4>
<h4>Lang: @solution?.Language</h4>



@if (solution == null)
{
    <p>Loading solution</p>
}
else
{
    <BSCollapseGroup>
        <BSCollapseItem>
            <BSCollapseToggle Color="Color.Primary">
                Код
            </BSCollapseToggle>
            <BSCollapse>
                <pre><code>
                <BSCard CardType="CardType.Text">@solution.Raw</BSCard>
                </code></pre>
            </BSCollapse>
        </BSCollapseItem>
    </BSCollapseGroup>
    <BSTabGroup>
        <BSTabList>
            <BSTab>
                <BSTabLabel>Solutions</BSTabLabel>
                <BSTabContent>
                    <BSCollapseGroup>
                        @foreach (var check in solution.SolutionChecks)
                        {
                            <BSCollapseItem @key="check.Id">
                                <BSCard CardType="CardType.Card">
                                    <BSCard CardType="CardType.Header">
                                        <BSCollapseToggle IsLink="false" Class="mb-0">@check.Status | @check.CheckedTime</BSCollapseToggle>
                                    </BSCard>
                                    <BSCollapse>
                                        <BSCard CardType="CardType.Body">
                                            <div class="row">
                                                <div class="col-6">
                                                    Example in
                                                </div>
                                                <div class="col-6">
                                                    Program Err
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">
                                                    <textarea rows="20" class="form-control">@check.ExampleIn</textarea>
                                                </div>
                                                <div class="col-6">
                                                    <textarea rows="20" class="form-control">@check.ProgramErr</textarea>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-6">
                                                    Example Out
                                                </div>
                                                <div class="col-6">
                                                    Program Out
                                                </div>
                                            </div>
                                            <div class="row">

                                                <div class="col-6">
                                                    <textarea rows="20" class="form-control">@check.ExampleOut</textarea>
                                                </div>
                                                <div class="col-6">
                                                    <textarea rows="20" class="form-control">@check.ProgramOut</textarea>
                                                </div>
                                            </div>
                                        </BSCard>
                                    </BSCollapse>
                                </BSCard>
                            </BSCollapseItem>
                        }
                    </BSCollapseGroup>
                </BSTabContent>
            </BSTab>
            <BSTab>
                <BSTabLabel>Build Logs</BSTabLabel>
                <BSTabContent>
                    <BSCollapseGroup>
                        @foreach (var build in solution.SolutionBuildLogs)
                        {
                            <BSCollapseItem @key="build.Id">
                                <BSCard CardType="CardType.Card">
                                    <BSCard CardType="CardType.Header">
                                        <BSCollapseToggle IsLink="false" Class="mb-0">@build.BuildedTime</BSCollapseToggle>
                                    </BSCard>
                                    <BSCollapse>
                                        <BSCard CardType="CardType.Body">
                                            <pre><code>@build.Log</code></pre>
                                        </BSCard>
                                    </BSCollapse>
                                </BSCard>
                            </BSCollapseItem>
                        }
                    </BSCollapseGroup>
                </BSTabContent>
            </BSTab>
        </BSTabList>
        <BSTabSelectedContent>
        </BSTabSelectedContent>
    </BSTabGroup>
}

@code {
    [Parameter]
    public Guid ChallengeId { get; set; }
    [Parameter]
    public string UserStudentId { get; set; }
    [Parameter]
    public Guid SolutionId { get; set; }

    private User user;
    private Models.Exercises.Challenge challenge;
    private Models.Solutions.Solution solution;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        challenge = await dbContext.Challenges.SingleOrDefaultAsync(c => c.Id == ChallengeId);
        user = await dbContext.Users.SingleOrDefaultAsync(u => u.StudentID == UserStudentId);
        solution = await dbContext.Solutions
            .Include(s => s.Exercise)
            .Include(s => s.SolutionChecks)
            .Include(s => s.SolutionBuildLogs)
            .SingleOrDefaultAsync(s => s.Id == SolutionId);
        solution.SolutionChecks = solution.SolutionChecks.OrderByDescending(ch => ch.Status).ThenByDescending(ch => ch.CheckedTime).ToList();
        solution.SolutionBuildLogs = solution.SolutionBuildLogs.OrderByDescending(l => l.BuildedTime).ToList();
    }
}
