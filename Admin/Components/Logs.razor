
<div class="row">

    <h3>Logs</h3><span class="oi oi-cog" title="@(showSettings ? "hide settings" : "show settings")" @onclick="@(() => showSettings = !showSettings)" aria-hidden="true"></span>
</div>
@if (showSettings)
{

    <label>
        Use Text Area
        <input type="checkbox" @bind="useTextArea" />
    </label>
    @if (useTextArea)
    {
        <label>
            Text area rows
            <input type="number" @bind="textAreaRows" />
        </label>
    }
    <label>
        Log records max count
        <input type="number" @bind="recordsCount" />
    </label>
}
@foreach (var item in messages)
{
    if (useTextArea)
    {
        <textarea readonly rows="@textAreaRows">@item</textarea>
    }
    else
    {
        <p>@item</p>
    }
}

@code {
    private List<string> messages = new List<string>();

    private bool showSettings;
    private bool useTextArea;
    private int textAreaRows = 20;
    private int recordsCount = 20;
    public async Task Log(object obj)
    {
        if (messages.Count == recordsCount)
            messages.RemoveAt(messages.Count - 1);
        string message;
        if (obj is string)
            message = obj.ToString();
        else
            message = System.Text.Json.JsonSerializer.Serialize(obj, new System.Text.Json.JsonSerializerOptions { WriteIndented = true }).ConvertCyrillic();
        messages.Insert(0, $"{DateTime.Now.ToString("hh:mm:ss")}: {message}");
        StateHasChanged();
        await Task.Delay(2);
    }
}
