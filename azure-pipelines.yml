name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-18.04'

stages:
- stage: build
  displayName: BuildServices
  jobs:
  - job: buildApi
    steps:
    - task: Cake@2
      inputs:
        script: 'build.cake'
        target: 'PublishApi'
        verbosity: 'Verbose'
    - publish: deploy/api
      artifact: api-build
  - job: buildExecutor
    steps:
    - task: Cake@2
      inputs:
        script: 'build.cake'
        target: 'PublishExecutor'
        verbosity: 'Verbose'
    - publish: deploy/executor
      artifact: executor-build
- stage: packInDocker
  jobs:
  - job: packApi
    steps:
      - download: current
        artifact: api-build
      - task: Docker@2
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: 'rtuitlab/olympiad-api'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/api-build/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/api-build'
          tags: |
            $(Build.BuildId)
            latest
  - job: packExecutor
    steps:
      - download: current
        artifact: executor-build
      - task: Docker@2
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: 'rtuitlab/olympiad-executor'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/executor-build/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/executor-build'
          tags: |
            $(Build.BuildId)
            latest

