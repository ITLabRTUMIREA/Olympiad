name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-latest'

variables:
  ${{ if notIn(variables['Build.SourceBranchName'], 'master', 'develop') }}:
    buildImage: false
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    apiServiceName: 'no'
    adminServiceName: 'no'
    executorServiceName: 'no'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    buildImage: true
    deployService: true
    deployEnvironment: development
    imageTags: |
      $(Build.BuildId)
      develop
    apiServiceName: olympiad-dev_api
    adminServiceName: olympiad-dev_admin
    executorServiceName: olympiad-dev_executor
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    apiServiceName: olympiad_api
    adminServiceName: olympiad_admin
    executorServiceName: olympiad_executor

stages:
- stage: build
  displayName: BuildServices
  jobs:
  - job: build
    strategy:
      matrix:
        api:
          cakeTarget: PublishApi
          publishPath: deploy/api
          artifactName: api-build
        admin:
          cakeTarget: PublishAdmin
          publishPath: deploy/admin
          artifactName: admin-build
        executor:
          cakeTarget: PublishExecutor
          publishPath: deploy/executor
          artifactName: executor-build
    steps:
    - task: Cake@2
      displayName: build service
      inputs:
        script: 'build.cake'
        target: $(cakeTarget)
        verbosity: 'Verbose'
    - publish: $(publishPath)
      artifact: $(artifactName)
      displayName: publish $(artifactName)
- stage: packInDocker
  condition: ${{variables.buildImage}}
  jobs:
  - job: pack
    strategy:
      matrix:
        api:
          imageName: rtuitlab/olympiad-api
          artifactName: api-build
        admin:
          imageName: rtuitlab/olympiad-admin
          artifactName: admin-build
        executor:
          imageName: rtuitlab/olympiad-executor
          artifactName: executor-build
    steps:
      - download: current
        artifact: $(artifactName)
        displayName: download $(artifactName)
      - task: Docker@2
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: $(imageName)
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/$(artifactName)/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/$(artifactName)'
          tags: ${{variables.imageTags}}

- stage: deploy
  condition: ${{variables.deployService}}
  jobs:
    - deployment: DeployApi
      displayName: Deploy api
      pool:
        vmImage: 'ubuntu-latest'
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image rtuitlab/olympiad-api:$(Build.BuildId) ${{variables.apiServiceName}}'
                  readyTimeout: '20000'
    - deployment: DeployAdmin
      displayName: Deploy admin
      pool:
        vmImage: 'ubuntu-latest'
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image rtuitlab/olympiad-admin:$(Build.BuildId) ${{variables.adminServiceName}}'
                  readyTimeout: '20000'
    - deployment: DeployExecutor
      displayName: Deploy executor
      pool:
        vmImage: 'ubuntu-latest'
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image rtuitlab/olympiad-executor:$(Build.BuildId) ${{variables.executorServiceName}}'
                  readyTimeout: '20000'

